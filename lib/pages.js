// Generated by CoffeeScript 1.3.3
(function() {
  var Pages, beautify;

  beautify = require("./beautify");

  Pages = (function() {

    function Pages(options) {
      this._javascript = options.javascript;
      this._css = options.css;
    }

    Pages.prototype.page = function(options) {
      var body, css, javascript, meta;
      javascript = options.javascript, css = options.css, body = options.body, meta = options.meta;
      return beautify(this.doctype() + this.html.html([this.html.head([this.meta(meta), this.javascript(javascript), this.css(css)]), this.html.body(body)]));
    };

    Pages.prototype.doctype = function() {
      return "<!DOCTYPE html>";
    };

    Pages.prototype.meta = function() {
      return "";
    };

    Pages.prototype.javascript = function(scripts) {
      var script;
      return ((function() {
        var _i, _len, _ref, _results;
        _ref = scripts.split(" ");
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          script = _ref[_i];
          _results.push(this.html.script({
            src: this._javascript[script],
            type: "text/javascript"
          }));
        }
        return _results;
      }).call(this)).join(" ");
    };

    Pages.prototype.css = function(stylesheets) {
      var stylesheet;
      return ((function() {
        var _i, _len, _ref, _results;
        _ref = stylesheets.split(" ");
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          stylesheet = _ref[_i];
          _results.push(this.html.link({
            href: this._css[stylesheet],
            type: "text/css",
            rel: "stylesheet"
          }));
        }
        return _results;
      }).call(this)).join("");
    };

    return Pages;

  })();

  module.exports = Pages;

}).call(this);
